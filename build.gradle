plugins {
    id 'com.gradle.plugin-publish' version '0.9.10'
    id 'java-gradle-plugin'
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://maven.google.com' }
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'java-library'

// Run the following to update the lockfiles
//     ./gradlew dependencies --write-locks
configurations.all {
    it.resolutionStrategy.activateDependencyLocking()
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    // These are compileOnly just so we can inspect these classes in IntelliJ
    // Android Gradle Plugin (AGP)
    compileOnly 'com.android.tools.build:gradle:3.1.+'
    testCompileOnly 'com.android.tools.build:gradle:3.1.+'

    // Google Play Services Gradle Plugin
    compileOnly 'com.google.gms:google-services:4.0.+'
    testCompileOnly 'com.google.gms:google-services:4.0.+'

    // Google's strict version matcher plugin
    compileOnly 'com.google.android.gms:strict-version-matcher-plugin:1.0.+'
    testCompileOnly 'com.google.android.gms:strict-version-matcher-plugin:1.0.+'

    testCompile gradleTestKit()
    testCompile 'junit:junit:4.12'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}


group = 'com.onesignal'
version = '0.10.1'
description 'OneSignal Gradle Plugin'
// Run to upload a new version to the Gradle Plugin Portal
// ./gradlew publishPlugins

pluginBundle {
    website = 'http://onesignal.com/'
    vcsUrl = 'https://github.com/OneSignal/OneSignal-Gradle-Plugin'
    plugins {
        plugin {
            id = 'com.onesignal.androidsdk.onesignal-gradle-plugin'
            displayName = 'OneSignal Gradle Plugin'
            description = project.description
            tags = ['OneSignal', 'Android', 'push', 'notifications', 'GCM', 'FCM']
        }
    }
}

gradlePlugin {
    plugins {
        plugin {
            id = 'com.onesignal.androidsdk.onesignal-gradle-plugin'
            implementationClass = 'com.onesignal.androidsdk.GradleProjectPlugin'
        }
    }
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}


// Build for Local Testing
apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}
// ## Steps to use a local copy of this plugin to test
// 1. Run from root to create local package
//      ./gradlew uploadArchives
// 2. In <projectRoot>/build.gradle of your test project add the following to buildscript -> repositories {..}
//      maven { url uri('../../repo') }
// 3. Update '../../repo' from above to your correct relative path
// 4. Add to buildscript -> dependencies
//      classpath 'com.onesignal:onesignal-gradle-plugin:[0.10.1, 0.99.99]'
// 5. To your app/build.gradle add
//      apply plugin: com.onesignal.androidsdk.GradleProjectPlugin